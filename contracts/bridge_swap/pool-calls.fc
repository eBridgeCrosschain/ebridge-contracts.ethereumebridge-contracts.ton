#include "../common/stdlib.fc";
#include "../common/dic.fc";
#include "../common/message.fc";
#include "op.fc";
#include "storage.fc";
#include "errors.fc";

() handle_pool_messages(int op, int query_id, int my_balance, int msg_value, slice in_msg_body) impure inline {
    if (op == swap_failed) {
        (var receipt_hash,var message_id,var exit_code,var seconds) = (in_msg_body~load_bits(256),in_msg_body~load_uint(256),in_msg_body~load_uint(32),in_msg_body~load_uint(64));
        storage::receipt_record_dic~dict_set_builder(KEY_LENGTH,receipt_hash,begin_cell().store_int(0,1));
        var body = begin_cell()
                        .store_uint(resend_to_oracle,32)
                        .store_uint(query_id,64)
                        .store_slice(storage::jetton_address)
                        .store_uint(message_id,256)
                        .store_uint(seconds,64)
                        .end_cell();
        send_simple_message(0,storage::bridge_address,body,SEND_MODE_CARRY_ALL_REMAINING_MESSAGE_VALUE | SEND_MODE_IGNORE_ERRORS);
        save_storage();
    }
    if (op == record_swap) {
        (var swap_id,var amount) = (in_msg_body~load_ref().begin_parse(),in_msg_body~load_coins());
        (var swap_info,int found_swap) = storage::swap_dic.dict_get?(KEY_LENGTH,swap_id);
        (int from_chain_id,int orgin_share,int target_share,int swapped_amount,int swapped_times) = 
            (swap_info~load_uint(32),swap_info~load_uint(64),swap_info~load_uint(64),swap_info~load_uint(256),swap_info~load_uint(256));
        swapped_amount += amount;
        swapped_times += 1;
        storage::swap_dic.dict_set_builder(KEY_LENGTH,swap_id,begin_cell()
                                                        .store_uint(from_chain_id,32)
                                                        .store_uint(orgin_share,64)
                                                        .store_uint(target_share,64)
                                                        .store_uint(swapped_amount,256)
                                                        .store_uint(swapped_times,256));
        save_storage();

    }

    throw(WRONG_OP);
}
