#include "limiter.fc";
#include "op.fc";

;; messages from admin

() handle_admin_messages(int op, int query_id, int my_balance, int msg_value, slice in_msg_body) impure inline {
    if (op == set_daily_limit_config) {
        (int chain_id,int limit_type,int refresh_time,int daily_limit) = (in_msg_body~load_uint(32),in_msg_body~load_uint(1),in_msg_body~load_uint(64),in_msg_body~load_uint(256));
        _set_daily_limit_config(chain_id,limit_type,refresh_time,daily_limit);
    }

    if (op == set_rate_limit_config) {
        (int chain_id,int limit_type,int is_enable,int token_capacity,int rate) = (in_msg_body~load_uint(32),in_msg_body~load_uint(1),in_msg_body~load_uint(1),in_msg_body~load_uint(256),in_msg_body~load_uint(256));
        _set_rate_limit_config(chain_id,limit_type,is_enable,token_capacity,rate);
    }

    if (op == set_bridge_swap) {
        slice swap_address = in_msg_body~load_msg_addr();
        storage::bridge_swap_address = swap_address;
        save_storage();
    }
    if (op == set_bridge) {
        slice bridge_address = in_msg_body~load_msg_addr();
        storage::bridge_address = bridge_address;
        save_storage();
    }

    throw(WRONG_OP);
}